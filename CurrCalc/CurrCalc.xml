<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CurrCalc</name>
    </assembly>
    <members>
        <member name="T:CurrCalc.Controllers.BaseController">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Controllers.BaseController.#ctor(Microsoft.Extensions.Logging.ILogger{CurrCalc.Controllers.BaseController})">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Controllers.BaseController.LogAndError500Response(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:CurrCalc.Controllers.BaseController.NotFoundObjectResult(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:CurrCalc.Controllers.BaseController.OkObjectResult(System.Object)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:CurrCalc.Controllers.BaseController.CreateObjectResult(System.Object)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:CurrCalc.Controllers.BaseController.BadRequestObjectResult(System.String,System.Collections.IEnumerable)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="errors"></param>
            <returns></returns>
        </member>
        <member name="T:CurrCalc.Controllers.CurrenciesController">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Controllers.CurrenciesController.#ctor(CurrCalc.Services.ICurrencyService,Microsoft.Extensions.Logging.ILogger{CurrCalc.Controllers.BaseController},CurrCalc.Data.Repository.IRepository{CurrCalc.Data.Entities.Currency,System.Int32})">
            <inheritdoc cref="T:CurrCalc.Controllers.CurrenciesController" />
        </member>
        <member name="M:CurrCalc.Controllers.CurrenciesController.Get(CurrCalc.Models.Common.IsoCode,System.Threading.CancellationToken)">
            <summary>
            Localize_Key_Get_Currencies
            </summary>
            <param name="code">Iso currency code</param>
            <param name="token">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <response code="200">OK</response>
            <response code="400">NotFound</response>
            <response code="401">Unauthorized</response>
            <response code="500">InternalServerError</response>
            <returns>Currency model</returns>
        </member>
        <member name="M:CurrCalc.Controllers.CurrenciesController.Put(CurrCalc.Models.Common.IsoCode,CurrCalc.Models.Currency.CurrencyUpdateModel,System.Threading.CancellationToken)">
            <summary>
            Localize_Key_Put_Currencies
            </summary>
            <param name="code">Iso currency code</param>
            <param name="model">Additional information for create or update currency</param>
            <param name="token">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <response code="200">OK</response>
            <response code="400">NotFound</response>
            <response code="401">Unauthorized</response>
            <response code="500">InternalServerError</response>
            <returns>Currency model</returns>
        </member>
        <member name="M:CurrCalc.Controllers.CurrenciesController.Post(CurrCalc.Models.Common.IsoCode,CurrCalc.Models.Currency.CurrencyModel,System.Threading.CancellationToken)">
            <summary>
            Localize_Key_Post_Currencies
            </summary>
            <param name="code">Iso currency code</param>
            <param name="model">Additional information for create or update currency</param>
            <param name="token">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <response code="201">Created</response>
            <response code="401">Unauthorized</response>
            <response code="500">InternalServerError</response>
            <returns>currency model</returns>
        </member>
        <member name="M:CurrCalc.Controllers.CurrenciesController.Delete(CurrCalc.Models.Common.IsoCode,System.Threading.CancellationToken)">
            <summary>
            Localize_Key_Delete_Currencies
            </summary>
            <param name="code">Iso currency code</param>
            <param name="token">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <response code="200">OK</response>
            <response code="204">NoContent</response>
            <response code="400">NotFound</response>
            <response code="401">Unauthorized</response>
            <response code="500">InternalServerError</response>
        </member>
        <member name="T:CurrCalc.Controllers.CurrencyExchangeRatesController">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Controllers.CurrencyExchangeRatesController.#ctor(CurrCalc.Data.Repository.IRepository{CurrCalc.Data.Entities.CurrencyExchangeRate,System.Int32},Microsoft.Extensions.Logging.ILogger{CurrCalc.Controllers.CurrencyExchangeRatesController},CurrCalc.Services.IExchangeService,CurrCalc.Services.ICurrencyService)">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Controllers.CurrencyExchangeRatesController.Get(CurrCalc.Models.CurrencyExchangeRate.CurrencyExchangeRateRequest,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Localize_Key_Get_Exchange_Rate
            </summary>
            <param name="request">Currency codes for source and target currencies</param>
            <param name="day">Day of exchange rate</param>
            <param name="token">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <response code="200">OK</response>
            <response code="400">NotFound</response>
            <response code="500">InternalServerError</response>
            <returns>exchange rate</returns>
        </member>
        <member name="M:CurrCalc.Controllers.CurrencyExchangeRatesController.Put(CurrCalc.Models.CurrencyExchangeRate.CurrencyExchangeRateRequest,CurrCalc.Models.CurrencyExchangeRate.CurrencyExchangeRateModel,System.Threading.CancellationToken)">
            <summary>
            Localize_Key_Put_Exchange_Rate
            </summary>
            <param name="request">Currency codes for source and target currencies</param>
            <param name="model">Additional information for create or update exchange range</param>
            <param name="token">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <response code="200">OK</response>
            <response code="400">NotFound</response>
            <response code="500">InternalServerError</response>
            <returns>currency exchange rate model</returns>
        </member>
        <member name="M:CurrCalc.Controllers.CurrencyExchangeRatesController.Post(CurrCalc.Models.CurrencyExchangeRate.CurrencyExchangeRateRequest,CurrCalc.Models.CurrencyExchangeRate.CurrencyExchangeRateModel,System.Threading.CancellationToken)">
            <summary>
            Localize_Key_Post_Exchange_Rate
            </summary>
            <param name="request">Currency codes for source and target currencies</param>
            <param name="model">Additional information for create or update exchange range</param>
            <param name="token">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <response code="200">OK</response>
            <response code="400">NotFound</response>
            <response code="500">InternalServerError</response>
            <returns>currency exchange rate model</returns>
        </member>
        <member name="T:CurrCalc.Controllers.LocalizedTextsController">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Controllers.LocalizedTextsController.#ctor(CurrCalc.Data.Repository.IRepository{CurrCalc.Data.Entities.LocalizedText,System.Int32},Microsoft.Extensions.Logging.ILogger{CurrCalc.Controllers.LocalizedTextsController})">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Controllers.LocalizedTextsController.GetLocalizedTexts(System.String,System.Threading.CancellationToken)">
            <summary>
            Get all localized text for specific language
            </summary>
            <param name="lang">Language code</param>
            <param name="token">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <response code="200">OK</response>
            <response code="400">NotFound</response>
            <response code="500">InternalServerError</response>
            <returns>Dictionary with all keys - values for a specific language</returns>
        </member>
        <member name="M:CurrCalc.Controllers.LocalizedTextsController.GetLanguages">
            <summary>
            Get all languages
            </summary>
            <response code="200">OK</response>
            <response code="400">NotFound</response>
            <response code="500">InternalServerError</response>
            <returns>Select list of languages</returns>
        </member>
        <member name="T:CurrCalc.Controllers.UsersController">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Controllers.UsersController.#ctor(Microsoft.Extensions.Logging.ILogger{CurrCalc.Controllers.UsersController},Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Identity.UserManager{CurrCalc.Data.Entities.AppUser},Microsoft.AspNetCore.Identity.SignInManager{CurrCalc.Data.Entities.AppUser},Microsoft.AspNetCore.Identity.RoleManager{Microsoft.AspNetCore.Identity.IdentityRole})">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Controllers.UsersController.CreateToken(CurrCalc.Models.User.AuthenticateModel)">
            <summary>
            Localize_Key_Create_Token
            </summary>
            <param name="model">Authenticate model</param>
        </member>
        <member name="M:CurrCalc.Controllers.UsersController.CreateUser(CurrCalc.Models.User.UserModel)">
            <summary>
            Localize_Key_Create_User
            </summary>
            <param name="model">User Model</param>
            <returns>App user model</returns>
        </member>
        <member name="T:CurrCalc.Data.AppDbContext">
            <summary>
            Implementation of SqlServer DB context of application
            </summary>
        </member>
        <member name="M:CurrCalc.Data.AppDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{CurrCalc.Data.AppDbContext})">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Data.AppDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Data.AppDbContext.Set``2">
            <inheritdoc />
        </member>
        <member name="P:CurrCalc.Data.AppDbContext.LocalizedText">
            <inheritdoc />
        </member>
        <member name="T:CurrCalc.Data.Entities.AppUser">
            <summary>
            
            </summary>
        </member>
        <member name="T:CurrCalc.Data.Entities.BaseEntity`1">
            <summary>
            Base class for entities of Db
            </summary>
        </member>
        <member name="P:CurrCalc.Data.Entities.BaseEntity`1.Id">
            <summary>
            Gets or sets the entity identifier
            </summary>
        </member>
        <member name="T:CurrCalc.Data.Entities.Currency">
            <summary>
            
            </summary>
        </member>
        <member name="M:CurrCalc.Data.Entities.Currency.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Data.Entities.Currency.Country">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Data.Entities.Currency.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Data.Entities.Currency.IsoCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Data.Entities.Currency.IsoNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Data.Entities.Currency.SourceCurrencyExchangeRates">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Data.Entities.Currency.TargetCurrencyExchangeRates">
            <summary>
            
            </summary>
        </member>
        <member name="T:CurrCalc.Data.Entities.CurrencyExchangeRate">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Data.Entities.CurrencyExchangeRate.Rate">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Data.Entities.CurrencyExchangeRate.From">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Data.Entities.CurrencyExchangeRate.To">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Data.Entities.CurrencyExchangeRate.SourceId">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Data.Entities.CurrencyExchangeRate.Source">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Data.Entities.CurrencyExchangeRate.TargetId">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Data.Entities.CurrencyExchangeRate.Target">
            <summary>
            
            </summary>
        </member>
        <member name="T:CurrCalc.Data.Entities.LocalizedText">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Data.Entities.LocalizedText.Language">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Data.Entities.LocalizedText.Key">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Data.Entities.LocalizedText.Value">
            <summary>
            
            </summary>
        </member>
        <member name="T:CurrCalc.Data.EntityTypeConfigurations.CurrencyConfiguration">
            <inheritdoc cref="T:CurrCalc.Data.Entities.Currency"/>
        </member>
        <member name="M:CurrCalc.Data.EntityTypeConfigurations.CurrencyConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{CurrCalc.Data.Entities.Currency})">
            <inheritdoc cref="T:CurrCalc.Data.Entities.Currency"/>
        </member>
        <member name="T:CurrCalc.Data.EntityTypeConfigurations.CurrencyExchangeRateConfiguration">
            <inheritdoc cref="T:CurrCalc.Data.Entities.CurrencyExchangeRate"/>
        </member>
        <member name="M:CurrCalc.Data.EntityTypeConfigurations.CurrencyExchangeRateConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{CurrCalc.Data.Entities.CurrencyExchangeRate})">
            <inheritdoc cref="T:CurrCalc.Data.Entities.CurrencyExchangeRate"/>
        </member>
        <member name="T:CurrCalc.Data.EntityTypeConfigurations.LocalizeTextConfiguration">
            <inheritdoc cref="T:CurrCalc.Data.Entities.LocalizedText"/>
        </member>
        <member name="M:CurrCalc.Data.EntityTypeConfigurations.LocalizeTextConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{CurrCalc.Data.Entities.LocalizedText})">
            <inheritdoc cref="T:CurrCalc.Data.Entities.LocalizedText"/>
        </member>
        <member name="T:CurrCalc.Data.IDbContext">
            <summary>
            Represents Interface of application DB context
            </summary>
        </member>
        <member name="M:CurrCalc.Data.IDbContext.Set``2">
            <summary>
            Creates a DbSet that can be used to query and save instances of entity
            </summary>
            <typeparam name="TEntity">Entity type</typeparam>
            <typeparam name="T">Struct of Id of Base entity</typeparam>
            <returns>A set for the given entity type</returns>
        </member>
        <member name="M:CurrCalc.Data.IDbContext.SaveChangesAsync(System.Threading.CancellationToken)">
            <inheritdoc cref="T:Microsoft.EntityFrameworkCore.SaveChangesAsync" />
        </member>
        <member name="T:CurrCalc.Data.Repository.EfRepository`2">
            <summary>
            Represents the Entity Framework repository
            </summary>
            <typeparam name="TEntity">Entity type</typeparam>
            <typeparam name="T">Struct of Id of Base entity</typeparam>
        </member>
        <member name="P:CurrCalc.Data.Repository.EfRepository`2.TableNoTracking">
            <inheritdoc />
        </member>
        <member name="P:CurrCalc.Data.Repository.EfRepository`2.Table">
            <inheritdoc />
        </member>
        <member name="P:CurrCalc.Data.Repository.EfRepository`2.Entities">
            <summary>
            Gets an entity set
            </summary>
        </member>
        <member name="M:CurrCalc.Data.Repository.EfRepository`2.#ctor(CurrCalc.Data.IDbContext)">
            <summary>
            Constructor
            </summary>
            <param name="context">Application sql server DB context </param>
        </member>
        <member name="M:CurrCalc.Data.Repository.EfRepository`2.GetByIdAsync(System.Object,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Data.Repository.EfRepository`2.InsertAsync(`0,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Data.Repository.EfRepository`2.UpdateAsync(`0,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Data.Repository.EfRepository`2.DeleteAsync(`0,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Data.Repository.EfRepository`2.SaveChangesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Data.Repository.EfRepository`2.GetFullErrorTextAndRollbackEntityChanges(Microsoft.EntityFrameworkCore.DbUpdateException)">
            <summary>
            
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="T:CurrCalc.Data.Repository.IRepository`2">
            <summary>
            Represents an entity repository
            </summary>
            <typeparam name="TEntity">Entity type</typeparam>
            <typeparam name="T">Primitive type for Id of Entity</typeparam>
        </member>
        <member name="P:CurrCalc.Data.Repository.IRepository`2.TableNoTracking">
            <summary>
            Gets a table with "no tracking" enabled (EF feature) Use it only when you load record(s) only for read-only operations
            </summary>
        </member>
        <member name="P:CurrCalc.Data.Repository.IRepository`2.Table">
            <summary>
            Gets a table
            </summary>
        </member>
        <member name="M:CurrCalc.Data.Repository.IRepository`2.GetByIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="token"> to observe while waiting for the task to complete.</param>
            <returns></returns>
        </member>
        <member name="M:CurrCalc.Data.Repository.IRepository`2.InsertAsync(`0,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="saveChanges"></param>
            <param name="token"> to observe while waiting for the task to complete.</param>
            <returns></returns>
        </member>
        <member name="M:CurrCalc.Data.Repository.IRepository`2.UpdateAsync(`0,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="saveChanges"></param>
            <param name="token"> to observe while waiting for the task to complete.</param>
            <returns></returns>
        </member>
        <member name="M:CurrCalc.Data.Repository.IRepository`2.DeleteAsync(`0,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="saveChanges"></param>
            <param name="token"> to observe while waiting for the task to complete.</param>
            <returns></returns>
        </member>
        <member name="M:CurrCalc.Data.Repository.IRepository`2.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="token"> to observe while waiting for the task to complete.</param>
            <returns></returns>
        </member>
        <member name="T:CurrCalc.Helpers.EnumHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:CurrCalc.Helpers.EnumHelper.GetDescription``1(``0)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <typeparam name="TEnum"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CurrCalc.Mappers.Map">
            <summary>
            
            </summary>
        </member>
        <member name="M:CurrCalc.Mappers.Map.ToEntity(CurrCalc.Models.CurrencyExchangeRate.CurrencyExchangeRateModel,System.Collections.Generic.Dictionary{System.String,CurrCalc.Data.Entities.Currency})">
            <summary>
            
            </summary>
            <param name="model"></param>
            <param name="currencies"></param>
            <returns></returns>
        </member>
        <member name="M:CurrCalc.Mappers.Map.ToEntity(CurrCalc.Models.Currency.CurrencyCreateModel)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:CurrCalc.Mappers.Map.ToModel(CurrCalc.Data.Entities.Currency)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:CurrCalc.Mappers.Map.ToModel(CurrCalc.Data.Entities.CurrencyExchangeRate)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="currencies"></param>
            <returns></returns>
        </member>
        <member name="M:CurrCalc.Mappers.Map.Update(CurrCalc.Data.Entities.Currency,CurrCalc.Models.Currency.CurrencyUpdateModel)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:CurrCalc.Mappers.Map.Update(CurrCalc.Data.Entities.CurrencyExchangeRate,CurrCalc.Models.CurrencyExchangeRate.CurrencyExchangeRateModel)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:CurrCalc.Models.ApiResponse">
            <summary>
            
            </summary>
        </member>
        <member name="M:CurrCalc.Models.ApiResponse.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:CurrCalc.Models.ApiResponse.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Models.ApiResponse.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Models.ApiResponse.Status">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Models.ApiResponse.Data">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Models.ApiResponse.ErrorMsg">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Models.ApiResponse.Success">
            <summary>
            
            </summary>
        </member>
        <member name="T:CurrCalc.Models.Common.IsoCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Models.Common.IsoCode.IsoCodeValue">
            <summary>
            
            </summary>
        </member>
        <member name="T:CurrCalc.Models.Common.Language">
            <inheritdoc />
        </member>
        <member name="F:CurrCalc.Models.Common.Language.En">
            <summary>
            
            </summary>
        </member>
        <member name="F:CurrCalc.Models.Common.Language.El">
            <summary>
            
            </summary>
        </member>
        <member name="T:CurrCalc.Models.Common.Role">
            <summary>
            
            </summary>
        </member>
        <member name="F:CurrCalc.Models.Common.Role.User">
            <summary>
            
            </summary>
        </member>
        <member name="F:CurrCalc.Models.Common.Role.Trader">
            <summary>
            
            </summary>
        </member>
        <member name="F:CurrCalc.Models.Common.Role.Admin">
            <summary>
            
            </summary>
        </member>
        <member name="T:CurrCalc.Models.CurrencyExchangeRate.CurrencyExchangeRateModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Models.CurrencyExchangeRate.CurrencyExchangeRateModel.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Models.CurrencyExchangeRate.CurrencyExchangeRateModel.Rate">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Models.CurrencyExchangeRate.CurrencyExchangeRateModel.Day">
            <summary>
            
            </summary>
        </member>
        <member name="T:CurrCalc.Models.CurrencyExchangeRate.CurrencyExchangeRateRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Models.CurrencyExchangeRate.CurrencyExchangeRateRequest.Source">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Models.CurrencyExchangeRate.CurrencyExchangeRateRequest.Target">
            <summary>
            
            </summary>
        </member>
        <member name="T:CurrCalc.Models.Currency.CurrencyCreateModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:CurrCalc.Models.Currency.CurrencyCreateModel.#ctor">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Models.Currency.CurrencyCreateModel.#ctor(CurrCalc.Models.Currency.CurrencyModel,CurrCalc.Models.Common.IsoCode)">
            <inheritdoc />
        </member>
        <member name="P:CurrCalc.Models.Currency.CurrencyCreateModel.Code">
            <summary>
            
            </summary>
        </member>
        <member name="T:CurrCalc.Models.Currency.CurrencyModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:CurrCalc.Models.Currency.CurrencyModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:CurrCalc.Models.Currency.CurrencyModel.#ctor(CurrCalc.Models.Currency.CurrencyModel)">
            <summary>
            
            </summary>
            <param name="model"></param>
        </member>
        <member name="P:CurrCalc.Models.Currency.CurrencyModel.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Models.Currency.CurrencyModel.Country">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Models.Currency.CurrencyModel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Models.Currency.CurrencyModel.IsoNumber">
            <summary>
            
            </summary>
        </member>
        <member name="T:CurrCalc.Models.Currency.CurrencyUpdateModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Models.Currency.CurrencyUpdateModel.Code">
            <summary>
            
            </summary>
        </member>
        <member name="T:CurrCalc.Models.User.AuthenticateModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Models.User.AuthenticateModel.Email">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Models.User.AuthenticateModel.Password">
            <summary>
            
            </summary>
        </member>
        <member name="T:CurrCalc.Models.User.UserModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:CurrCalc.Models.User.UserModel.Role">
            <summary>
            
            </summary>
        </member>
        <member name="T:CurrCalc.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:CurrCalc.Program.Main(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:CurrCalc.Program.CreateHostBuilder(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:CurrCalc.Services.CurrencyService">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Services.CurrencyService.#ctor(CurrCalc.Data.Repository.IRepository{CurrCalc.Data.Entities.Currency,System.Int32},CurrCalc.Services.IMemoryService)">
            <summary>
            
            </summary>
            <param name="repository"></param>
            <param name="memoryService"></param>
        </member>
        <member name="M:CurrCalc.Services.CurrencyService.GetAll(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Services.CurrencyService.GetCurrencyByIsoCode(System.String,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Services.CurrencyService.GetCurrenciesByIsoCode(System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Services.CurrencyService.ClearCurrencyCacheAsync">
            <inheritdoc />
        </member>
        <member name="T:CurrCalc.Services.ExchangeService">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Services.ExchangeService.#ctor(CurrCalc.Data.Repository.IRepository{CurrCalc.Data.Entities.CurrencyExchangeRate,System.Int32})">
            <summary>
            
            </summary>
            <param name="repository"></param>
        </member>
        <member name="M:CurrCalc.Services.ExchangeService.GetExchangeRateAsync(CurrCalc.Data.Entities.Currency,CurrCalc.Data.Entities.Currency,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="day"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:CurrCalc.Services.ICurrencyService">
            <summary>
            
            </summary>
        </member>
        <member name="M:CurrCalc.Services.ICurrencyService.GetAll(System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:CurrCalc.Services.ICurrencyService.GetCurrencyByIsoCode(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="isoCode"></param>
            <param name="getFromDb"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:CurrCalc.Services.ICurrencyService.GetCurrenciesByIsoCode(System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="sourceCode"></param>
            <param name="targetCode"></param>
            <param name="getFromDb"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:CurrCalc.Services.ICurrencyService.ClearCurrencyCacheAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:CurrCalc.Services.IExchangeService">
            <summary>
            
            </summary>
        </member>
        <member name="M:CurrCalc.Services.IExchangeService.GetExchangeRateAsync(CurrCalc.Data.Entities.Currency,CurrCalc.Data.Entities.Currency,System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="day"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:CurrCalc.Services.IMemoryService">
            <summary>
            
            </summary>
        </member>
        <member name="M:CurrCalc.Services.IMemoryService.ClearAsync``1(System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CurrCalc.Services.IMemoryService.GetOrCreateAsync``1(System.Object,System.Func{System.Threading.Tasks.Task{``0}},System.Int32)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="createItem"></param>
            <param name="expireTimeInSec"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CurrCalc.Services.MemoryService">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Services.MemoryService.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            
            </summary>
            <param name="cache"></param>
        </member>
        <member name="M:CurrCalc.Services.MemoryService.ClearAsync``1(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:CurrCalc.Services.MemoryService.GetOrCreateAsync``1(System.Object,System.Func{System.Threading.Tasks.Task{``0}},System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:CurrCalc.Startup">
            <summary>
            
            </summary>
        </member>
        <member name="M:CurrCalc.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:CurrCalc.Startup.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:CurrCalc.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:CurrCalc.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
